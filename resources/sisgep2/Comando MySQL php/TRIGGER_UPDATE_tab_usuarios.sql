DROP TRIGGER IF EXISTS TRIGGER_UPDATE_tab_usuarios;

delimiter $
CREATE TRIGGER TRIGGER_UPDATE_tab_usuarios
BEFORE UPDATE ON tab_usuarios
FOR EACH ROW

begin
    IF NEW.CONTABLOQUEADA <> OLD.CONTABLOQUEADA AND NEW.CONTABLOQUEADA = TRUE THEN
		SET NEW.DATACONTABLOQUEADA = CURRENT_TIMESTAMP;
    END IF;
    
    IF NEW.ALTERANDOSENHA THEN
		SET NEW.ALTERANDOSENHA = FALSE;
		-- ZERA A QUANTIDADE DE ERROS DE LOGIN E PERGUNTAS DE SEGURANÇA
		SET NEW.DATAALTERACAOSENHA = CURRENT_TIMESTAMP, NEW.QTDERROSENHA = 0, NEW.QTDERROPERGUNTASEGURANCA = 0, NEW.SOLICITACAOREDEFINIRSENHA = FALSE;
		-- ZERA OS BLOQUEIOS QUE HOUVER
		UPDATE tab_usuarioshistoricobloqueios SET PRAZOINTERROMPIDO = TRUE 
        WHERE IDUSUARIO = OLD.ID AND TIMESTAMPDIFF(MINUTE,HORALIBERACAO,CURRENT_TIMESTAMP) <= 0;
		-- ZERA SOLICITAÇÕES DE REDEFINIÇÃO DE SENHA SE HOUVER
		UPDATE tab_usuarioshistoricosolicitacaoredefinirsenha SET SOLICITACAOCANCELADA = TRUE 
        WHERE IDUSUARIO = OLD.ID AND SOLICITACAOCANCELADA = FALSE AND SOLICITACAOATENDIDA = FALSE;

    END IF;
    
    IF NEW.NOME <> OLD.NOME THEN
		INSERT INTO tab_usuarioshistoricotrocanome (IDUSUARIO, HORA, NOMEANTIGO, NOMENOVO) 
        VALUES(OLD.ID, CURRENT_TIMESTAMP, OLD.NOME, NEW.NOME);
    END IF;
    
    IF NEW.USUARIO <> OLD.USUARIO THEN
		INSERT INTO tab_usuarioshistoricotrocausuario (IDUSUARIO, HORA, NOMEANTIGO, NOMENOVO) 
        VALUES(OLD.ID, CURRENT_TIMESTAMP, OLD.USUARIO, NEW.USUARIO);
    END IF;
        
END; $
