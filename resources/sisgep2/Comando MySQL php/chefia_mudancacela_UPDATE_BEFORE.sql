DROP TRIGGER IF EXISTS chefia_mudancacela_UPDATE_BEFORE;

delimiter $
CREATE TRIGGER chefia_mudancacela_UPDATE_BEFORE
BEFORE UPDATE ON chefia_mudancacela
FOR EACH ROW

begin
	DECLARE valorAntigo blob;
	DECLARE valorNovo blob;
    -- Se o raio ou a cela de destino for alterado, se insere no log somente uma vez. Pois se alterar o raio e a cela iria inserir duas vezes no log
    DECLARE blnCelaRaioAlterado bool;
    
    SET blnCelaRaioAlterado = FALSE;
    
    IF NEW.RAIODESTINO IS NULL OR NEW.RAIODESTINO = '' THEN
		SET NEW.RAIODESTINO = NULL;
		SET NEW.CELADESTINO = NULL;
	END IF;

    IF NEW.OBSERVACOES IS NULL OR NEW.OBSERVACOES = '' THEN
		SET NEW.OBSERVACOES = NULL;
	END IF;
    
	IF NEW.DATAATUALIZACAO IS NULL OR NEW.DATAATUALIZACAO = '' THEN
		SET NEW.DATAATUALIZACAO = CURRENT_TIMESTAMP;
    END IF;
    
    /*IF NEW.IDEXCLUSOREGISTRO IS NOT NULL AND OLD.IDEXCLUSOREGISTRO IS NULL THEN
		IF NEW.DATAEXCLUSOREGISTRO IS NULL OR NEW.DATAEXCLUSOREGISTRO = '' THEN
			SET NEW.DATAEXCLUSOREGISTRO = CURRENT_TIMESTAMP;
		END IF;
		IF NEW.IPEXCLUSOREGISTRO IS NULL OR NEW.IPEXCLUSOREGISTRO = '' THEN
			SET NEW.IPEXCLUSOREGISTRO = NULL;
		END IF;
	END IF;*/
    
	IF NEW.RAIODESTINO IS NULL OR NEW.RAIODESTINO = 0 OR NEW.CELADESTINO IS NULL OR NEW.CELADESTINO = 0 THEN
		IF NEW.RAIODESTINO IS NULL OR NEW.RAIODESTINO = 0 THEN
			SET NEW.RAIODESTINO = NULL;
		END IF;
		SET NEW.CELADESTINO = NULL;
		IF NEW.IDSITUACAO NOT IN (5,6,7,8,9) THEN
			SET NEW.IDSITUACAO = 3;
		END IF;
	 ELSEIF NEW.IDSITUACAO = 0 OR NEW.IDSITUACAO IS NULL THEN        
			SET NEW.IDSITUACAO = 4;
	 END IF;
     
	 IF NEW.IDSITUACAO = 3 AND NEW.RAIODESTINO IS NOT NULL AND NEW.CELADESTINO IS NOT NULL THEN        
		SET NEW.IDSITUACAO = 4;
	 END IF;

	-- Salva os log de alterações
    -- RAIODESTINO
    IF NEW.RAIODESTINO IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.RAIODESTINO; END IF;
    IF OLD.RAIODESTINO IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.RAIODESTINO; END IF;
    IF valorAntigo <> valorNovo THEN
		IF valorAntigo <> '**VAZIO**' THEN
			IF OLD.CELADESTINO IS NOT NULL THEN
				SET valorAntigo = CONCAT(valorAntigo, '/', OLD.CELADESTINO);
            ELSE
				SET valorAntigo = CONCAT(valorAntigo, '/?');
            END IF;
        END IF;
		IF valorNovo <> '**VAZIO**' THEN
			IF NEW.CELADESTINO IS NOT NULL THEN
				SET valorNovo = CONCAT(valorNovo, '/', NEW.CELADESTINO);
            ELSE
				SET valorNovo = CONCAT(valorNovo, '/?');
            END IF;
        END IF;
		INSERT INTO chefia_mudancacela_log (IDMUDANCA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'RAIODESTINO', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
		SET blnCelaRaioAlterado = TRUE;
    END IF;
    
    -- CELADESTINO
    IF NEW.CELADESTINO IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.CELADESTINO; END IF;
    IF OLD.CELADESTINO IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.CELADESTINO; END IF;
    IF valorAntigo <> valorNovo AND blnCelaRaioAlterado = FALSE THEN
		IF valorAntigo <> '**VAZIO**' THEN
			SET valorAntigo = CONCAT(OLD.RAIODESTINO, '/', valorAntigo);
		ELSE
			SET valorAntigo = CONCAT(OLD.RAIODESTINO, '/?');
        END IF;
		IF valorNovo <> '**VAZIO**' THEN
			SET valorNovo = CONCAT(NEW.RAIODESTINO, '/', valorNovo);
		ELSE
			SET valorNovo = CONCAT(NEW.RAIODESTINO, '/?');
        END IF;

		INSERT INTO chefia_mudancacela_log (IDMUDANCA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'CELADESTINO', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
        
    -- OBSERVACOES
    IF NEW.OBSERVACOES IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.OBSERVACOES; END IF;
    IF OLD.OBSERVACOES IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.OBSERVACOES; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO chefia_mudancacela_log (IDMUDANCA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'OBSERVACOES', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
    -- IDSITUACAO
    IF NEW.IDSITUACAO <> OLD.IDSITUACAO THEN
		-- Insere a alteração da situação
		INSERT INTO chefia_mudancacelasituacao (IDMUDANCA, IDSITUACAO, IDCADASTRO, IPCADASTRO, DATACADASTRO) VALUES 
		(OLD.ID, NEW.IDSITUACAO, NEW.IDATUALIZACAO, NEW.IPATUALIZACAO, NEW.DATAATUALIZACAO);
    END IF;
    
    -- Se a situação for 6 é porque foi realizado a alteração da cela, então se insere no histórico de mudanças de celas
    IF NEW.IDSITUACAO = 6 THEN
		IF NEW.RAIODESTINO NOT IN (13, 15, 16, 17) THEN
			UPDATE cadastros_mudancacela SET RAIOALTERADO = NEW.RAIODESTINO, CELAALTERADO = NEW.CELADESTINO, 
            IDATUALIZACAO = NEW.IDATUALIZACAO, IPATUALIZACAO = NEW.IPATUALIZACAO, DATAATUALIZACAO = NEW.DATAATUALIZACAO WHERE ID = OLD.IDCELAATUAL;
			INSERT INTO cadastros_mudancacela (IDPRESO, RAIO, CELA, IDCADASTRO, IPCADASTRO, DATACADASTRO) VALUES
			(OLD.IDPRESO, NEW.RAIODESTINO, NEW.CELADESTINO, NEW.IDATUALIZACAO, NEW.IPATUALIZACAO, NEW.DATAATUALIZACAO);
		END IF;
	END IF;
    
	SET NEW.DATAATUALIZACAO = NULL;
	SET NEW.IPATUALIZACAO = NULL;
	SET NEW.IDATUALIZACAO = NULL;
 END $
 
DESC chefia_mudancacela;
DESC chefia_mudancacela_log;