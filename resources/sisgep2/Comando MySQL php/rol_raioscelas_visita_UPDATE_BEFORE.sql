DROP TRIGGER IF EXISTS rol_raioscelas_visita_UPDATE_BEFORE;

delimiter $
CREATE TRIGGER rol_raioscelas_visita_UPDATE_BEFORE
BEFORE UPDATE ON rol_raioscelas_visita
FOR EACH ROW

BEGIN
	DECLARE valorAntigo blob;
	DECLARE valorNovo blob;
    
	IF NEW.DATAATUALIZACAO IS NULL OR NEW.DATAATUALIZACAO = '' THEN
		SET NEW.DATAATUALIZACAO = CURRENT_TIMESTAMP;
    END IF;

	IF NEW.IDTURNO = 0 THEN
		SET NEW.IDTURNO = DEFAULT;
	END IF;
    
	-- Salva os log de alterações
    -- IDTURNO
    IF NEW.IDTURNO IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.IDTURNO; END IF;
    IF OLD.IDTURNO IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.IDTURNO; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO rol_raioscelas_visita_log (IDREFERENCIA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'IDTURNO', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
    -- PERMITIDO
    IF NEW.PERMITIDO IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.PERMITIDO; END IF;
    IF OLD.PERMITIDO IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.PERMITIDO; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO rol_raioscelas_visita_log (IDREFERENCIA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'PERMITIDO', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
    SET NEW.DATAATUALIZACAO = NULL;
	SET NEW.IPATUALIZACAO = NULL;
	SET NEW.IDATUALIZACAO = NULL;
 END; $

DESC rol_raioscelas_visita;