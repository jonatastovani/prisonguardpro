DROP TRIGGER IF EXISTS cimic_apresentacoes_UPDATE_BEFORE;

delimiter $
CREATE TRIGGER cimic_apresentacoes_UPDATE_BEFORE
BEFORE UPDATE ON cimic_apresentacoes
FOR EACH ROW

BEGIN
	DECLARE valorAntigo blob;
	DECLARE valorNovo blob;
    DECLARE idMudanca integer;
    
	IF NEW.DATAATUALIZACAO IS NULL OR NEW.DATAATUALIZACAO = '' THEN
		SET NEW.DATAATUALIZACAO = CURRENT_TIMESTAMP;
    END IF;
    
    IF NEW.IDEXCLUSOREGISTRO IS NOT NULL AND OLD.IDEXCLUSOREGISTRO IS NULL THEN
		IF NEW.DATAEXCLUSOREGISTRO IS NULL OR NEW.DATAEXCLUSOREGISTRO = '' THEN
			SET NEW.DATAEXCLUSOREGISTRO = CURRENT_TIMESTAMP;
		END IF;
		IF NEW.IPEXCLUSOREGISTRO IS NULL OR NEW.IPEXCLUSOREGISTRO = '' THEN
			SET NEW.IPEXCLUSOREGISTRO = NULL;
		END IF;
	END IF;

	-- Salva os log de alterações
    -- HORAAPRES
    IF NEW.HORAAPRES IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.HORAAPRES; END IF;
    IF OLD.HORAAPRES IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.HORAAPRES; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO cimic_apresentacoes_log (IDREFERENCIA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'HORAAPRES', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
    -- IDMOTIVOAPRES
    IF NEW.IDMOTIVOAPRES IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.IDMOTIVOAPRES; END IF;
    IF OLD.IDMOTIVOAPRES IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.IDMOTIVOAPRES; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO cimic_apresentacoes_log (IDREFERENCIA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'IDMOTIVOAPRES', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
    -- PROCESSO
    IF NEW.PROCESSO IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.PROCESSO; END IF;
    IF OLD.PROCESSO IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.PROCESSO; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO cimic_apresentacoes_log (IDREFERENCIA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'PROCESSO', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
	-- O ID SITUAÇÃO SÓ PODE ESTAR ENTRE O ARRAY DESSE TIPO
    IF NEW.IDSITUACAO <> OLD.IDSITUACAO AND NEW.IDSITUACAO IN (SELECT IDSITUACAO FROM tab_situacaofiltro WHERE IDTIPO = 4) THEN
		-- Insere a alteração da situação
		INSERT INTO cimic_apresentacoessituacao (IDREFERENCIA, IDSITUACAO, IDCADASTRO, IPCADASTRO, DATACADASTRO) VALUES 
		(OLD.ID, NEW.IDSITUACAO, NEW.IDATUALIZACAO, NEW.IPATUALIZACAO, NEW.DATAATUALIZACAO);
        
        #SE FOR ALTERADO COMO EM ATENDIMENTO, ENTÃO É INSERIDO O IDBOLETIMSAIDA DO DIA
        IF NEW.IDSITUACAO = 17 THEN
			SET NEW.REALIZADOSAIDA = TRUE;
			SET NEW.IDBOLETIMSAIDA = (SELECT ID FROM chefia_boletim WHERE BOLETIMDODIA = TRUE ORDER BY ID DESC LIMIT 1);
            SET NEW.DATAHORASAIDA = NEW.DATAATUALIZACAO;
            
            SET idMudanca = (SELECT MUD2.ID FROM cadastros_mudancacela MUD2 WHERE MUD2.IDPRESO = OLD.IDPRESO AND MUD2.IDEXCLUSOREGISTRO IS NULL ORDER BY MUD2.ID DESC LIMIT 1);
            #Encerra a cela do preso
            UPDATE cadastros_mudancacela  SET RAIOALTERADO = 14, CELAALTERADO = 1, 
			IDATUALIZACAO = NEW.IDATUALIZACAO, IPATUALIZACAO = NEW.IPATUALIZACAO, DATAATUALIZACAO = NEW.DATAATUALIZACAO
            WHERE ID = idMudanca;

			#Insere a cela de TRE (Trânsito Externo)
			INSERT INTO cadastros_mudancacela (IDPRESO, RAIO, CELA, IDCADASTRO, IPCADASTRO, DATACADASTRO) VALUES
			(OLD.IDPRESO, 14, 1, NEW.IDATUALIZACAO, NEW.IPATUALIZACAO, NEW.DATAATUALIZACAO);
            
        END IF;
        
		#SE FOR ALTERADO COMO REALIZADO, ENTÃO É INSERIDO O IDBOLETIMRETORNO DO DIA
        IF NEW.IDSITUACAO = 13 THEN
			SET NEW.REALIZADORETORNO = TRUE;
			SET NEW.IDBOLETIMRETORNO = (SELECT ID FROM chefia_boletim WHERE BOLETIMDODIA = TRUE ORDER BY ID DESC LIMIT 1);
			SET NEW.DATAHORARETORNO = NEW.DATAATUALIZACAO;
        END IF;
        
	ELSE
		SET NEW.IDSITUACAO = OLD.IDSITUACAO;
    END IF;

    -- REALIZADOSAIDA
    IF NEW.REALIZADOSAIDA IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.REALIZADOSAIDA; END IF;
    IF OLD.REALIZADOSAIDA IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.REALIZADOSAIDA; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO cimic_apresentacoes_log (IDREFERENCIA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'REALIZADOSAIDA', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
    -- REALIZADORETORNO
    IF NEW.REALIZADORETORNO IS NULL THEN SET valorNovo = '**VAZIO**'; ELSE  SET valorNovo = NEW.REALIZADORETORNO; END IF;
    IF OLD.REALIZADORETORNO IS NULL THEN SET valorAntigo = '**VAZIO**'; ELSE  SET valorAntigo = OLD.REALIZADORETORNO; END IF;
    IF valorAntigo <> valorNovo THEN
		INSERT INTO cimic_apresentacoes_log (IDREFERENCIA, CAMPOATUALIZADO, ANTIGO, NOVO, IDATUALIZACAO, DATAATUALIZACAO, IPATUALIZACAO)
        VALUES (OLD.ID, 'REALIZADORETORNO', valorAntigo, valorNovo, NEW.IDATUALIZACAO, NEW.DATAATUALIZACAO, NEW.IPATUALIZACAO);
    END IF;
    
    SET NEW.DATAATUALIZACAO = NULL;
	SET NEW.IPATUALIZACAO = NULL;
	SET NEW.IDATUALIZACAO = NULL;
 END; $

DESC cimic_apresentacoes;
